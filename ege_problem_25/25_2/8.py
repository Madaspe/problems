# // Рассмотрим произвольное натуральное число, представим его всеми возможными
# // способами в виде произведения двух натуральных чисел и найдём для каждого
# // такого произведения разность сомножителей. Например, для числа 18 получим:
# // 18 = 18*1 = 9*2 = 6*3, множество разностей содержит числа 17, 7 и 3.
# // Подходящей будем называть пару сомножителей, разность между которыми
# // не превышает 110. Найдите все натуральные числа, принадлежащие отрезку
# // [1000000; 1500000], у которых есть не менее трёх подходящих пар сомножителей.
# // В ответе перечислите найденные числа в порядке возрастания, справа от
# // каждого запишите наибольший из всех сомножителей, образующих подходящие пары.

from math import sqrt


def get_all_divisors(number):
    divisors = []

    for divisor in range(1, round(sqrt(number) + 1)):
        if number % divisor == 0:
            div = number // divisor
            divisors.append((divisor, div, abs(divisor - div)))
    return list(set(divisors))


for num in range(1000000, 1500000 + 1):
    divisors = list(filter(lambda x: x[2] <= 110, get_all_divisors(num)))

    if len(divisors) >= 3:
        print(num, max([max(i) for i in divisors]))
